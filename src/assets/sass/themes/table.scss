@use '../variables/variables';

.table {
  width: 100%;
  margin-bottom: variables.$spacer;
  color: variables.$table-color;
  background-color: variables.$table-bg; // Reset for nesting within parents with `background-color`.

  th,
  td {
    padding: variables.$table-cell-padding;
    vertical-align: top;
    border-top: variables.$table-border-width solid variables.$table-border-color;
  }

  thead th {
    vertical-align: bottom;
    border-bottom: (2 * variables.$table-border-width) solid variables.$table-border-color;
  }

  tbody + tbody {
    border-top: (2 * variables.$table-border-width) solid variables.$table-border-color;
  }
}

//
// Condensed table w/ half padding
//

.table-sm {
  th,
  td {
    padding: variables.$table-cell-padding-sm;
  }
}

// Border versions
//
// Add or remove borders all around the table and between all the columns.

.table-bordered {
  border: variables.$table-border-width solid variables.$table-border-color;

  th,
  td {
    border: variables.$table-border-width solid variables.$table-border-color;
  }

  thead {
    th,
    td {
      border-bottom-width: 2 * variables.$table-border-width;
    }
  }
}

.table-borderless {
  th,
  td,
  thead th,
  tbody + tbody {
    border: 0;
  }
}

// Zebra-striping
//
// Default zebra-stripe styles (alternating gray and transparent backgrounds)

.table-striped {
  tbody tr:nth-of-type(#{variables.$table-striped-order}) {
    background-color: variables.$table-accent-bg;
  }
}

// Dark styles
//
// Same table markup, but inverted color scheme: dark background and light text.

// stylelint-disable-next-line no-duplicate-selectors
.table {
  .thead-dark {
    th {
      color: variables.$table-dark-color;
      background-color: variables.$table-dark-bg;
      border-color: variables.$table-dark-border-color;
    }
  }

  .thead-light {
    th {
      color: variables.$table-head-color;
      background-color: variables.$table-head-bg;
      border-color: variables.$table-border-color;
    }
  }
}

.table-dark {
  color: variables.$table-dark-color;
  background-color: variables.$table-dark-bg;

  th,
  td,
  thead th {
    border-color: variables.$table-dark-border-color;
  }

  &.table-bordered {
    border: 0;
  }

  &.table-striped {
    tbody tr:nth-of-type(#{variables.$table-striped-order}) {
      background-color: variables.$table-dark-accent-bg;
    }
  }

  &.table-hover {
    tbody tr {
      color: variables.$table-dark-hover-color;
      background-color: variables.$table-dark-hover-bg;
    }
  }
}

// Responsive tables
//
// Generate series of `.table-responsive-*` classes for configuring the screen
// size of where your table will overflow.

.table-responsive {
  display: block;
  width: 100%;
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;

  // Prevent double border on horizontal scroll due to use of `display: block;`
  > .table-bordered {
    border: 0;
  }
}


@media (max-width: 767.98px) {
  .transactions.table .transaction-hash .trim {
    max-width: 8rem;
  }
}
